// <auto-generated />
using System;
using IDSProject.core.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IDSProject.core.Migrations
{
    [DbContext(typeof(DatabaseServerContext))]
    [Migration("20240915220106_AddEventNameToEventMember")]
    partial class AddEventNameToEventMember
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IDSProject.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryCode")
                        .HasColumnType("int")
                        .HasColumnName("categoryCode");

                    b.Property<int>("Cost")
                        .HasColumnType("int")
                        .HasColumnName("cost");

                    b.Property<DateOnly>("DateFrom")
                        .HasColumnType("date")
                        .HasColumnName("dateFrom");

                    b.Property<DateOnly>("DateTo")
                        .HasColumnType("date")
                        .HasColumnName("dateTo");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Destination")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("destination");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK__Event__3214EC07B8BFCDB0");

                    b.HasIndex("CategoryCode");

                    b.HasIndex(new[] { "Name" }, "UQ__Event__72E12F1BD91E8D88")
                        .IsUnique();

                    b.ToTable("Event", (string)null);
                });

            modelBuilder.Entity("IDSProject.Models.EventGuide", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EventId")
                        .HasColumnType("int")
                        .HasColumnName("eventId");

                    b.Property<int>("GuideId")
                        .HasColumnType("int")
                        .HasColumnName("guideId");

                    b.HasKey("Id")
                        .HasName("PK__EventGui__3214EC07585D5FEA");

                    b.HasIndex("EventId");

                    b.HasIndex("GuideId");

                    b.ToTable("EventGuide", (string)null);
                });

            modelBuilder.Entity("IDSProject.Models.EventMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EventId")
                        .HasColumnType("int")
                        .HasColumnName("eventId");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("memberId");

                    b.HasKey("Id")
                        .HasName("PK__EventMem__3214EC07EFE3F065");

                    b.HasIndex("EventId");

                    b.HasIndex("MemberId");

                    b.ToTable("EventMember", (string)null);
                });

            modelBuilder.Entity("IDSProject.Models.Guide", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("dateOfBirth");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fullName");

                    b.Property<DateOnly>("JoiningDate")
                        .HasColumnType("date")
                        .HasColumnName("joiningDate");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("photo");

                    b.Property<string>("Profession")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("profession");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("PK__Guide__3214EC07057185A8");

                    b.HasIndex(new[] { "Username" }, "UQ__Guide__F3DBC572C42661CE")
                        .IsUnique();

                    b.ToTable("Guide", (string)null);
                });

            modelBuilder.Entity("IDSProject.Models.LookUp", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("code");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Code"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasColumnName("order");

                    b.HasKey("Code")
                        .HasName("PK__LookUp__357D4CF8F0E6D5EE");

                    b.ToTable("LookUp", (string)null);
                });

            modelBuilder.Entity("IDSProject.Models.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("dateOfBirth");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("EmergencyNum")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("emergencyNum");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fullName");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("gender");

                    b.Property<DateOnly>("JoiningDate")
                        .HasColumnType("date")
                        .HasColumnName("joiningDate");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("mobileNumber");

                    b.Property<string>("Nationality")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nationality");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("photo");

                    b.Property<string>("Profession")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("profession");

                    b.HasKey("Id")
                        .HasName("PK__Member__3214EC07E136927B");

                    b.HasIndex(new[] { "Email" }, "UQ__Member__AB6E6164ED190933")
                        .IsUnique();

                    b.ToTable("Member", (string)null);
                });

            modelBuilder.Entity("IDSProject.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("dateOfBirth");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("gender")
                        .IsFixedLength();

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("password");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("role");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("IDSProject.Models.Event", b =>
                {
                    b.HasOne("IDSProject.Models.LookUp", "CategoryCodeNavigation")
                        .WithMany()
                        .HasForeignKey("CategoryCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Event_LookUp_CategoryCode");

                    b.Navigation("CategoryCodeNavigation");
                });

            modelBuilder.Entity("IDSProject.Models.EventGuide", b =>
                {
                    b.HasOne("IDSProject.Models.Event", "Event")
                        .WithMany("EventGuides")
                        .HasForeignKey("EventId")
                        .IsRequired()
                        .HasConstraintName("FK__EventGuid__event__6477ECF3");

                    b.HasOne("IDSProject.Models.Guide", "Guide")
                        .WithMany("EventGuides")
                        .HasForeignKey("GuideId")
                        .IsRequired()
                        .HasConstraintName("FK__EventGuid__guide__6383C8BA");

                    b.Navigation("Event");

                    b.Navigation("Guide");
                });

            modelBuilder.Entity("IDSProject.Models.EventMember", b =>
                {
                    b.HasOne("IDSProject.Models.Event", "Event")
                        .WithMany("EventMembers")
                        .HasForeignKey("EventId")
                        .IsRequired()
                        .HasConstraintName("FK__EventMemb__event__68487DD7");

                    b.HasOne("IDSProject.Models.Member", "Member")
                        .WithMany("EventMembers")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK__EventMemb__membe__6754599E");

                    b.Navigation("Event");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("IDSProject.Models.Event", b =>
                {
                    b.Navigation("EventGuides");

                    b.Navigation("EventMembers");
                });

            modelBuilder.Entity("IDSProject.Models.Guide", b =>
                {
                    b.Navigation("EventGuides");
                });

            modelBuilder.Entity("IDSProject.Models.Member", b =>
                {
                    b.Navigation("EventMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
